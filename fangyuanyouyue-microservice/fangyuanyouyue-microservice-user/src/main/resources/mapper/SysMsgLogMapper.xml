<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fangyuanyouyue.user.dao.SysMsgLogMapper" >
  <resultMap id="BaseResultMap" type="com.fangyuanyouyue.user.model.SysMsgLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.fangyuanyouyue.user.model.SysMsgLog" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, add_time
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_msg_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_msg_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fangyuanyouyue.user.model.SysMsgLog"  useGeneratedKeys="true" keyProperty="id">
    insert into sys_msg_log (id, user_id, add_time, 
      content)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fangyuanyouyue.user.model.SysMsgLog"  useGeneratedKeys="true" keyProperty="id">
    insert into sys_msg_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fangyuanyouyue.user.model.SysMsgLog" >
    update sys_msg_log
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fangyuanyouyue.user.model.SysMsgLog" >
    update sys_msg_log
    set user_id = #{userId,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fangyuanyouyue.user.model.SysMsgLog" >
    update sys_msg_log
    set user_id = #{userId,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="countPage" parameterType="Integer" resultType="Integer">
    select count(*) from sys_msg_log a,sys_operator b where a.user_id = b.id
    <if test="keyword != null">
      and (a.content like "%"#{keyword}"%"
      or b.user_name like "%"#{keyword}"%"
      )
    </if>
    <if test="startDate != null">
      and a.add_time <![CDATA[ > ]]> #{startDate}
    </if>
    <if test="endDate != null">
      and a.add_time <![CDATA[ <= ]]> #{endDate}
    </if>

  </select>

  <select id="getPage" resultMap="BaseResultMap">
    select a.*,b.user_name from sys_msg_log a,sys_operator b where a.user_id = b.id
    <if test="keyword != null">
      and (a.content like "%"#{keyword}"%"
      or b.user_name like "%"#{keyword}"%"
      )
    </if>
    <if test="startDate != null">
      and a.add_time <![CDATA[ > ]]> #{startDate}
    </if>
    <if test="endDate != null">
      and a.add_time <![CDATA[ <= ]]> #{endDate}
    </if>
    <if test="orders != null">
      order by a.${orders}
      <if test="ascType != null and ascType == 2">
        desc
      </if>
    </if>
    limit #{start},#{limit}
  </select>
</mapper>