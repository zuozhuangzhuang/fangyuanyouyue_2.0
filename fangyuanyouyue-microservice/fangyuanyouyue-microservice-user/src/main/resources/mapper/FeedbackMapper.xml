<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fangyuanyouyue.user.dao.FeedbackMapper">
  <resultMap id="BaseResultMap" type="com.fangyuanyouyue.user.model.Feedback">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.fangyuanyouyue.user.model.Feedback">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, add_time, version, type
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from feedback
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from feedback
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fangyuanyouyue.user.model.Feedback" useGeneratedKeys="true" keyProperty="id">
    insert into feedback (id, user_id, add_time, 
      version, type, content
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}, 
      #{version,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fangyuanyouyue.user.model.Feedback" useGeneratedKeys="true" keyProperty="id">
    insert into feedback
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fangyuanyouyue.user.model.Feedback">
    update feedback
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fangyuanyouyue.user.model.Feedback">
    update feedback
    set user_id = #{userId,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fangyuanyouyue.user.model.Feedback">
    update feedback
    set user_id = #{userId,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="countPage" parameterType="Integer" resultType="Integer">
    select count(*) from feedback a,user_info b where a.user_id=b.id
    <if test="keyword != null">
      and (
      b.nick_name like "%"#{keyword,jdbcType=VARCHAR}"%"
      or b.phone like "%"#{keyword,jdbcType=VARCHAR}"%"
      )
    </if>
    <if test="type != null">
      and a.type = #{type}
    </if>
    <if test="startDate != null">
      and a.add_time <![CDATA[ > ]]> #{startDate}
    </if>

    <if test="endDate != null">
      and a.add_time <![CDATA[ <= ]]> #{endDate}
    </if>

  </select>

  <select id="getPage" resultMap="BaseResultMap">
    select a.*,b.phone,b.nick_name from feedback a,user_info b where a.user_id=b.id
    <if test="keyword != null">
      and (
      b.nick_name like "%"#{keyword,jdbcType=VARCHAR}"%"
      or b.phone like "%"#{keyword,jdbcType=VARCHAR}"%"
      )
    </if>
    <if test="type != null">
      and a.type = #{type}
    </if>

    <if test="startDate != null">
      and a.add_time <![CDATA[ > ]]> #{startDate}
    </if>

    <if test="endDate != null">
      and a.add_time <![CDATA[ <= ]]> #{endDate}
    </if>

    <if test="orders != null">
      order by a.${orders}
      <if test="ascType != null and ascType == 2">
        desc
      </if>
    </if>
    limit #{start},#{limit}
  </select>
</mapper>