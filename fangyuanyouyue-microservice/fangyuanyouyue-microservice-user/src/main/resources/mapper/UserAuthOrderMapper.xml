<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fangyuanyouyue.user.dao.UserAuthOrderMapper">
  <resultMap id="BaseResultMap" type="com.fangyuanyouyue.user.model.UserAuthOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, order_no, amount, status, add_time, update_time, title
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_auth_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_auth_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fangyuanyouyue.user.model.UserAuthOrder" useGeneratedKeys="true" keyProperty="id">
    insert into user_auth_order (id, user_id, order_no, 
      amount, status, add_time, 
      update_time, title)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, 
      #{amount,jdbcType=DECIMAL}, #{status,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{title,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fangyuanyouyue.user.model.UserAuthOrder" useGeneratedKeys="true" keyProperty="id">
    insert into user_auth_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="title != null">
        title,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fangyuanyouyue.user.model.UserAuthOrder">
    update user_auth_order
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fangyuanyouyue.user.model.UserAuthOrder">
    update user_auth_order
    set user_id = #{userId,jdbcType=INTEGER},
      order_no = #{orderNo,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      title = #{title,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByOrderNo" parameterType="String" resultMap="BaseResultMap">
    select * from user_auth_order where order_no = #{orderNo} and status = 1
  </select>
  
    
  <select id="countPage" parameterType="Integer" resultType="Integer">
    select count(*) from user_auth_order a,user_info b where a.user_id=b.id
    <if test="keyword != null">
      and ( 
        b.phone like "%"#{keyword,jdbcType=VARCHAR}"%"
        or b.nick_name like "%"#{keyword,jdbcType=VARCHAR}"%"
      )
    </if>
    <if test="status != null">
      and a.status = #{status}
    </if>
    <if test="startDate != null">
      and a.add_time <![CDATA[ > ]]> #{startDate}
    </if>
    
    <if test="endDate != null">
      and a.add_time <![CDATA[ <= ]]> #{endDate}
    </if>
    
  </select>
  
  <select id="getPage" resultMap="BaseResultMap">
    select a.user_id,a.add_time,c.status,b.nick_name,b.phone from user_auth_order a,user_info b,user_info_ext c where a.user_id=b.id and c.user_id=b.id
    <if test="keyword != null">
      and (
        b.phone like "%"#{keyword,jdbcType=VARCHAR}"%"
        or b.nick_name like "%"#{keyword,jdbcType=VARCHAR}"%"
      )
    </if>
    <if test="status != null">
      and a.status = #{status}
    </if>
    
    <if test="startDate != null">
      and a.add_time <![CDATA[ > ]]> #{startDate}
    </if>
    
    <if test="endDate != null">
      and a.add_time <![CDATA[ <= ]]> #{endDate}
    </if>
    
    <if test="orders != null">
      order by #{orders}
    </if>
    limit #{start},#{limit}
  </select>
  
  
</mapper>