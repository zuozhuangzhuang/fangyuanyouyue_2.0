<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fangyuanyouyue.user.dao.UserNickNameDetailMapper" >
  <resultMap id="BaseResultMap" type="com.fangyuanyouyue.user.model.UserNickNameDetail" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="old_nick_name" property="oldNickName" jdbcType="VARCHAR" />
    <result column="new_nick_name" property="newNickName" jdbcType="VARCHAR" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, old_nick_name, new_nick_name, add_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_nick_name_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_nick_name_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fangyuanyouyue.user.model.UserNickNameDetail" useGeneratedKeys="true" keyProperty="id" >
    insert into user_nick_name_detail (id, user_id, old_nick_name, 
      new_nick_name, add_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{oldNickName,jdbcType=VARCHAR}, 
      #{newNickName,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.fangyuanyouyue.user.model.UserNickNameDetail" useGeneratedKeys="true" keyProperty="id">
    insert into user_nick_name_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="oldNickName != null" >
        old_nick_name,
      </if>
      <if test="newNickName != null" >
        new_nick_name,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="oldNickName != null" >
        #{oldNickName,jdbcType=VARCHAR},
      </if>
      <if test="newNickName != null" >
        #{newNickName,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fangyuanyouyue.user.model.UserNickNameDetail" >
    update user_nick_name_detail
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="oldNickName != null" >
        old_nick_name = #{oldNickName,jdbcType=VARCHAR},
      </if>
      <if test="newNickName != null" >
        new_nick_name = #{newNickName,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fangyuanyouyue.user.model.UserNickNameDetail" >
    update user_nick_name_detail
    set user_id = #{userId,jdbcType=INTEGER},
      old_nick_name = #{oldNickName,jdbcType=VARCHAR},
      new_nick_name = #{newNickName,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="countPage" parameterType="Integer" resultType="Integer">
    select count(*) from user_nick_name_detail a,user_info b where a.user_id = b.id
    <if test="id != null">
      and b.id = #{id}
    </if>
    <if test="keyword != null">
      and (
      a.old_nick_name like "%"#{keyword,jdbcType=VARCHAR}"%"
      or a.new_nick_name like "%"#{keyword,jdbcType=VARCHAR}"%"
      or b.nick_name like "%"#{keyword,jdbcType=VARCHAR}"%"
      or b.phone like "%"#{keyword,jdbcType=VARCHAR}"%"
      )
    </if>
    <if test="startDate != null">
      and a.add_time <![CDATA[ > ]]> #{startDate}
    </if>

    <if test="endDate != null">
      and a.add_time <![CDATA[ <= ]]> #{endDate}
    </if>

  </select>

  <select id="getPage" resultMap="BaseResultMap">
    select a.*,b.nick_name from user_nick_name_detail a,user_info b
    <where>
      a.user_id = b.id
      <if test="id != null">
        and b.id = #{id}
      </if>
      <if test="keyword != null">
        and (
        a.old_nick_name like "%"#{keyword,jdbcType=VARCHAR}"%"
        or a.new_nick_name like "%"#{keyword,jdbcType=VARCHAR}"%"
        or b.nick_name like "%"#{keyword,jdbcType=VARCHAR}"%"
        or b.phone like "%"#{keyword,jdbcType=VARCHAR}"%"
        )
      </if>
      <if test="startDate != null">
        and a.add_time <![CDATA[ > ]]> #{startDate}
      </if>

      <if test="endDate != null">
        and a.add_time <![CDATA[ <= ]]> #{endDate}
      </if>
    </where>
    <if test="orders != null">
      order by a.${orders}
      <if test="ascType != null and ascType == 2">
        desc
      </if>
    </if>
    <if test="start != null and limit != null">
      limit #{start},#{limit}
    </if>
  </select>

</mapper>