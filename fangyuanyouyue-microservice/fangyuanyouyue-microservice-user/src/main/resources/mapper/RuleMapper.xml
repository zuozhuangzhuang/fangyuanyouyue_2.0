<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fangyuanyouyue.user.dao.RuleMapper">
  <resultMap id="BaseResultMap" type="com.fangyuanyouyue.user.model.Rule">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="rule_type" jdbcType="INTEGER" property="ruleType" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.fangyuanyouyue.user.model.Rule">
    <result column="rule_content" jdbcType="LONGVARCHAR" property="ruleContent" />
  </resultMap>
  <sql id="Base_Column_List">
    id, rule_type, add_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    rule_content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from rule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from rule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fangyuanyouyue.user.model.Rule" useGeneratedKeys="true" keyProperty="id">
    insert into rule (id, rule_type, add_time, 
      update_time, rule_content)
    values (#{id,jdbcType=INTEGER}, #{ruleType,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{ruleContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fangyuanyouyue.user.model.Rule" useGeneratedKeys="true" keyProperty="id">
    insert into rule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ruleType != null">
        rule_type,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="ruleContent != null">
        rule_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ruleType != null">
        #{ruleType,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ruleContent != null">
        #{ruleContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fangyuanyouyue.user.model.Rule">
    update rule
    <set>
      <if test="ruleType != null">
        rule_type = #{ruleType,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ruleContent != null">
        rule_content = #{ruleContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fangyuanyouyue.user.model.Rule">
    update rule
    set rule_type = #{ruleType,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      rule_content = #{ruleContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fangyuanyouyue.user.model.Rule">
    update rule
    set rule_type = #{ruleType,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getRuleByType" resultMap="ResultMapWithBLOBs">
    select * from rule where rule_type = #{ruleType}
  </select>

  <select id="countPage" resultType="Integer">
    select count(id) from rule
    <where>
      <if test="ruleType != null">
        and rule_type = #{ruleType}
      </if>
      <if test="keyword != null and keyword != ''">
        and rule_content like '%'#{keyword}'%'
      </if>
      <if test="startDate != null">
        and add_time <![CDATA[ > ]]> #{startDate}
      </if>
      <if test="endDate != null">
        and add_time <![CDATA[ <= ]]> #{endDate}
      </if>
    </where>
  </select>

  <select id="getPage" resultMap="ResultMapWithBLOBs">
    select * from rule
    <where>
      <if test="ruleType != null">
        and rule_type = #{ruleType}
      </if>
      <if test="keyword != null and keyword != ''">
        and rule_content like '%'#{keyword}'%'
      </if>
      <if test="startDate != null">
        and add_time <![CDATA[ > ]]> #{startDate}
      </if>
      <if test="endDate != null">
        and add_time <![CDATA[ <= ]]> #{endDate}
      </if>
    </where>
    <if test="orders != null">
      order by ${orders}
      <if test="ascType != null and ascType == 2">
        desc
      </if>
    </if>
    <if test="limit != null and start != null">
      limit #{start},#{limit}
    </if>
  </select>
</mapper>