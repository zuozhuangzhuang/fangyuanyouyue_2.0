<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fangyuanyouyue.user.dao.UserFansMapper">
  <resultMap id="BaseResultMap" type="com.fangyuanyouyue.user.model.UserFans">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="to_user_id" jdbcType="INTEGER" property="toUserId" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, to_user_id, add_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_fans
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_fans
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fangyuanyouyue.user.model.UserFans" useGeneratedKeys="true" keyProperty="id">
    insert into user_fans (id, user_id, to_user_id, 
      add_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{toUserId,jdbcType=INTEGER}, 
      #{addTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.fangyuanyouyue.user.model.UserFans">
    insert into user_fans
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="toUserId != null">
        to_user_id,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="toUserId != null">
        #{toUserId,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fangyuanyouyue.user.model.UserFans">
    update user_fans
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="toUserId != null">
        to_user_id = #{toUserId,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fangyuanyouyue.user.model.UserFans">
    update user_fans
    set user_id = #{userId,jdbcType=INTEGER},
      to_user_id = #{toUserId,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByUserIdToUserId" parameterType="Integer" resultMap="BaseResultMap">
    select * from user_fans
    <where>
      1=1
      <if test="userId != null">
        and user_id = #{userId,jdbcType=INTEGER}
      </if>
      <if test="userId != null and toUserId != null">
        and to_user_id = #{toUserId,jdbcType=INTEGER}
      </if>
    </where>
  </select>
  <select id="fansCount" parameterType="Integer" resultType="Integer">
    select count(*) from user_fans where to_user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="collectCount" parameterType="Integer" resultType="Integer">
    select count(*) from user_fans where user_id = #{userId,jdbcType=INTEGER}
  </select>

  <select id="myFansOrFollows" parameterType="Integer" resultType="Map">
    select * from user_info a,user_fans b,user_vip c,user_info_ext d
    <where>
      a.id = c.user_id and a.id = d.user_id
      <if test="userId != null and type == 1">
        and a.id = b.to_user_id and b.user_id = #{userId}
      </if>
      <if test="userId != null and type == 2">
        and a.id = b.user_id and b.to_user_id = #{userId}
      </if>
      <if test="search != null and search != ''">
        and a.nick_name like "%"#{search}"%"
      </if>
    </where>
    order by b.add_time desc limit #{start},#{limit}
  </select>

  <select id="userFans" parameterType="Integer" resultMap="BaseResultMap">
    select * from user_fans where to_user_id = #{userId}
    <if test="start != null and limit != null">
      limit #{start},#{limit}
    </if>
  </select>
</mapper>